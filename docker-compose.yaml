name: "simfast"

services:
  user-ms:
    image: user-microservice:local
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - ${APP_PORT:-8080}:8080
    environment:
      APP_ENV: ${APP_ENV:-debug}
      DB_HOST: ${DB_HOST:-user-db}
      DB_PORT: ${DB_PORT:-5432}
      DB_DATABASE: ${DB_DATABASE:-SIMFAST_DEV}
      DB_USERNAME: ${DB_USERNAME:-SIMFAST_USER}
      DB_PASSWORD: ${DB_PASSWORD:-SIMFAST_PASS}
      DB_SCHEMA: ${DB_SCHEMA:-user_schema}
    depends_on:
      user-db:
        condition: service_healthy
    networks:
      - smmf_network
    volumes:
      - ./config.yml:/app/config.yml
    entrypoint:
      [
        "/app/scripts/startup/wait-for.sh",
        "${DB_HOST:-user-db}:${DB_PORT:-5432}",
        "--",
        "/app/runner",
        "serve"
      ]

  user-db:
    image: postgres:17-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_DATABASE:-SIMFAST_DEV}
      POSTGRES_USER: ${DB_USERNAME:-SIMFAST_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-SIMFAST_PASS}
      TZ: UTC
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - user_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U ${DB_USERNAME:-SIMFAST_USER} -d ${DB_DATABASE:-SIMFAST_DEV}'"]
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 15s
    networks:
      - smmf_network

volumes:
  user_data:
  
networks:
  smmf_network:
    name: smmf_network
    driver: bridge
 